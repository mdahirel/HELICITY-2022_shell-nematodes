---
title: "analysis"
author: "Maxime Dahirel"
format: html
editor_options: 
  chunk_output_type: console
---


```{r packages}
library(car)
library(DHARMa)
library(emmeans)
library(glmmTMB)
library(MuMIn)
library(ncf)  # for spline correlograms
library(sf)

library(tidyverse)

library(here)
```

 

```{r}
nematodes <- read_csv(here("data","HELICITY22_nematodes.csv"))

points <- st_read(here("data","HELICITY22_sites_BELambert72_wGHSL.gpkg")) |> 
  mutate(x=st_coordinates(geom)[,1],
         y=st_coordinates(geom)[,2]) |> 
  mutate(
    SMOD_type =  case_when(SMOD ==30 ~ "3 - Urban Centre",
                      (SMOD >= 20 & SMOD < 30) ~ "2 - Intermediate",
                      (SMOD > 10 & SMOD < 20) ~ "1 - Rural",
                      SMOD == 10 ~ "0 - Water bodies",
                      T ~ NA_character_)
  )
```

```{r}
data <- nematodes |> 
  mutate(has.nematodes = Nematodes>0) |> 
  group_by(Population) |>
  summarise(
    N_nema = sum(has.nematodes, na.rm=TRUE),
    N = sum(!is.na(has.nematodes))
  ) |> 
  left_join(points) |> 
  st_as_sf()
```


```{r}
## misc numbers for methods
dim(points)[1] # number of sites visited
dim(nematodes)[1] # number of snails
length(unique(nematodes$Population)) # number of sites with snails
sum(data$N) #number of snails scanned for nematodes (i.e. excluding missing snails)
dim(data)[1] # number of sites with snails, after accounting for lost snails

table(points$City)  # spread of visited sites between cities
table(data$City)    # spread of sites with Cepaea between cities

sum(data$N_nema)    # number of snails with nematodes
sum(nematodes$Nematodes,na.rm=TRUE)  # number of nematodes found across all shells

mean(points$N_collectors) ## mean number of collectors per site
range(points$N_collectors)
mean(points$Sampling_effort_minutes)  # effort in person-minutes
range(points$Sampling_effort_minutes)

nearest <- st_nearest_feature(points)
nearest_dist <- st_distance(points, points[nearest,], by_element=TRUE)

range(nearest_dist)
mean(nearest_dist)

nearest <- st_nearest_feature(data)
nearest_dist <- st_distance(data, data[nearest,], by_element=TRUE)

range(nearest_dist)
mean(nearest_dist)
```

```{r}
mod_built100 <- glm(cbind(N_nema,N-N_nema)~scale(BUILT100)+City,data=data,family=binomial)
mod_built1000 <- glm(cbind(N_nema,N-N_nema)~scale(BUILT1000)+City,data=data,family=binomial)
mod_pop100 <- glm(cbind(N_nema,N-N_nema)~scale(POP100)+City,data=data,family=binomial)
mod_pop1000 <- glm(cbind(N_nema,N-N_nema)~scale(POP1000)+City,data=data,family=binomial)

mod_SMOD <- glm(cbind(N_nema,N-N_nema)~SMOD_type+City,data=data,family=binomial)
```

## test for model assumption

```{r}
testDispersion(mod_SMOD)
testDispersion(mod_SMOD,type="PearsonChisq")
performance::check_overdispersion(mod_SMOD)

## you can test with all five models, similar behaviour:
## conflict between the simulation-based DHARMa and the traditional parametric test
## there are indication that maybe the traditional one is anticonservative because we have low min(Np, N(1-p))
## see https://github.com/florianhartig/DHARMa/issues/117 and link to ben bolker FAQ
## we are in such a case here:

tibble(
  Np = fitted(mod_SMOD)*data$N,
  N1minusp = (1-fitted(mod_SMOD))*data$N
) |> 
  rowwise() |> 
  mutate(min_of_Np_N1minusp=min(Np,N1minusp)) |> 
  ungroup() |> 
  ggplot()+
  geom_histogram(aes(min_of_Np_N1minusp))+
  geom_vline(xintercept = 5)
```

```{r}
mod_built100_BB <- glmmTMB(cbind(N_nema,N-N_nema)~scale(BUILT100)+City,data=data,family=betabinomial)
mod_built1000_BB <- glmmTMB(cbind(N_nema,N-N_nema)~scale(BUILT1000)+City,data=data,family=betabinomial)
mod_pop100_BB <- glmmTMB(cbind(N_nema,N-N_nema)~scale(POP100)+City,data=data,family=betabinomial)
mod_pop1000_BB <- glmmTMB(cbind(N_nema,N-N_nema)~scale(POP1000)+City,data=data,family=betabinomial)

mod_SMOD_BB <- glmmTMB(cbind(N_nema,N-N_nema)~SMOD_type+City,data=data,family=betabinomial)
```

# model comparison

```{r}
model.sel(mod_built100,mod_built1000,mod_pop100,mod_pop1000,mod_SMOD,rank="AICc")

model.sel(mod_built100_BB,mod_built1000_BB,mod_pop100_BB,mod_pop1000_BB,mod_SMOD_BB,rank="AICc")

# separate model selection tables or together? TBD; anyway, doesn't change much in paper
```

# autocorrelation check

```{r}
simres <- simulateResiduals(mod_SMOD_BB,n=1000)

plot(simres)

testSpatialAutocorrelation(simulationOutput = simres, 
                           x = data$x, y= data$y)


correlog <- spline.correlog (x = data$x/1000, y = data$y/1000,
                             z = residuals(mod_SMOD_BB, type = "pearson"))

plot(correlog) # no evidence of residual autocorrelation
```


# model exploration



```{r}

# with beta-binomial

Anova(mod_SMOD_BB)

contrast(emmeans(mod_SMOD_BB,specs = ~ SMOD_type),method="pairwise")

preds_BB <- emmeans(mod_SMOD_BB,specs = ~ SMOD_type, type="response") |> 
  as_tibble() |> 
  mutate(type="beta-binomial")
```

```{r}
# binomial case # for display only

Anova(mod_SMOD)

contrast(emmeans(mod_SMOD,specs = ~ SMOD_type),method="pairwise")
preds_B <- emmeans(mod_SMOD,specs = ~ SMOD_type, type="response")|> 
  as_tibble() |> 
  mutate(type="binomial")
```

# plot

```{r}
ggplot(data) + 
  geom_point(aes(SMOD_type,N_nema/N,size=N),position = position_jitter(width=0.3,height=0),col="darkgrey") + 
  geom_pointrange(data = preds_BB, aes(x=SMOD_type,y=prob,ymin=asymp.LCL,ymax=asymp.UCL),size=1,pch=21,fill="white")+ 
  scale_size_area("Number of snails") + 
  labs(x="Degree of Urbanisation (GHS-SMOD, 1km grid cell)", y = "Proportion of shells with nematodes")+
  theme_bw()
```

```{r}

ggplot(data) + 
  geom_point(aes(SMOD_type,N_nema/N,size=N),position = position_jitter(width=0.3,height=0),col="darkgrey") + 
  geom_pointrange(data = rbind(preds_B,preds_BB), aes(x=SMOD_type,y=prob,ymin=asymp.LCL,ymax=asymp.UCL,col=type),size=1,pch=21,fill="white",position=position_dodge(width=0.2))+ 
  scale_size_area("Number of snails") + 
  labs(x="Degree of Urbanisation (GHS-SMOD, 1km grid cell)", y = "Proportion of shells with nematodes")+
  theme_bw()
```
